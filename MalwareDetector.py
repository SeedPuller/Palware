import subprocess
import re
import sys
import smtplib
import os
green = "\033[32m"
normal = "\033[m"
red = "\033[31m"
white = "\033[37m"
orange = "\033[33m"
print(" %s ┌─────────────────────────────────────────────────┐\n│                                                 │\n│ m    m            #           mm            m   │\n│ ##  ##  mmm    mmm#           ##   m mm   mm#mm │\n│ # ## # \"   #  #\" \"#          #  #  #\"  #    #   │ \n| #   "" # m\"\"\"#  #   #          #mm#  #   #    #   │\n│ #    # \"mm\"#  \"#m##         #    # #   #    \"mm │\n│                                                 │\n│                                                 │\n└─────────────────────────────────────────────────┘\n %s" % (red, normal))
print(" %s [+]  PHP Malware Scanner Ver 1.4\n\n%s" % (green, normal))
directory = ""
internal = ""
unsafef = ""
uploadfunc = ""
uploadform = ""
filemanage = ""
extensions = ""
emailV = False
usern = ""
pasw = ""
dest = ""
filename = "mal_detect.py"


def send_mail(user, paswd, destination, subject, msg):
    if type(destination) is not list:
        destination = [destination]
        destination = ', '.join(destination)
    else:
        destination = ', '.join(destination)
    message = "From: %s\n To: %s \n Subject: %s \n\n %s" % (user, destination, subject, msg)
    try:
        server = smtplib.SMTP("smtp.gmail.com", 587)
        server.ehlo()
        server.starttls()
        server.login(user, paswd)
        server.sendmail(user, destination, message)
        server.close()
        return True
    except:
        return False


def startapp(folder, intern, unsff, upfunc, upform, filemng, extns, emil):
    global filename
    if bashexec("sudo nohup python3 %s -d %s %s %s %s %s %s %s %s & 85" % (filename, folder, intern, unsff, upfunc, upform, filemng, extns, emil)):
        return True
    else:
        return False


def stopapp():
    global filename
    regex = r"(root[\s]*[0-9]*[\s\S0-9]* -d)"
    psx = bashoutput("ps aux | grep \"sudo nohup python3 %s\" " % filename)
    search = re.search(regex, psx, re.IGNORECASE)
    if search is not None:
        pid = int(search.group().split()[1])
        kill = bashoutput("sudo kill %d" % pid)
        if "No such process" not in kill:
            return True
        else:
            return False
    else:
        return False


def bashexec(command):
    process = subprocess.Popen(command.split())
    if process:
        return True
    else:
        return False


def bashoutput(bashc):
    basherr = r"(\/bin\/sh: [0-9]*: [a-zA-Z0-9 !@#$%^&*()\[\]{}\-=+<>\/?.,:;'\"\\|_]*: not found)"
    bash = subprocess.getoutput(bashc)
    if re.search(basherr, bash, re.IGNORECASE):
        return False
    else:
        return bash


def get_opt():
    global directory, internal, unsafef, uploadfunc, uploadform, filemanage, extensions, green, red, normal, orange, white, emailV, usern, pasw, dest
    config_path = "mal_config.conf"
    optnum = input(" %sAvailable Options : \n 1- Add scanning directory (required) "
          "\n 2- Change internal directory check OPT (Default = OFF)"
          " \n 3- Add files that has unsafe-functions to white list"
          " \n 4- Add files that has upload-functions to white list"
          " \n 5- Add files that has upload-forms to white list"
          " \n 6- Add files that has file-managing-functions to white list"
          " \n 7- Add files that has banned-extensions to white list"
          " \n 8- Add Your gmail for sending and receiving emails"
          " \n 9- (Save/Load) Configurations"
          " \n 10- Start scanning in background"
          " \n 11- Stop scanning "
          " \n 12- Exit "
          "\n %s-->%s" % (white,red,normal))
    if optnum.isdigit():
        optnum = int(optnum)
    else:
        print(" %s No Option found ! Please Enter an number \n %s" % (red, normal))
        get_opt()
    if optnum == 1:
        directory = input("%sEnter directory name (for current directory enter ' . ') \n %s-->%s " % (white, red, normal))
        get_opt()
    elif optnum == 2:
        internal = input("%sCheck internal directory ? (y/n) \n %s-->%s " % (white, red, normal))
        get_opt()
    elif optnum == 3:
        unsafef = input("%sEnter file(s) name : (separate each name with ' , ') \n %s-->%s " % (white, red, normal))
        get_opt()
    elif optnum == 4:
        uploadfunc = input("%sEnter file(s) name : (separate each name with ' , ') \n %s-->%s " % (white, red, normal))
        get_opt()
    elif optnum == 5:
        uploadform = input("%sEnter file(s) name : (separate each name with ' , ') \n %s-->%s " % (white, red, normal))
        get_opt()
    elif optnum == 6:
        filemanage = input("%sEnter file(s) name : (separate each name with ' , ') \n %s-->%s " % (white, red, normal))
        get_opt()
    elif optnum == 7:
        extensions = input("%sEnter file(s) name : (separate each name with ' , ') \n %s-->%s " % (white, red, normal))
        get_opt()
    elif optnum == 8:
        usern = input("Enter sender gmail username : \n %s-->%s " % (red, normal))
        pasw = input("Enter sender gmail password : \n %s-->%s " % (red, normal))
        dest = str(input("Enter receiver gmail name(s) : (separate each address with ' , ') \n %s-->%s " % (red, normal)))
        subject = "Test Email"
        msg = "This is a test mail for testing email sendig !"
        print(" %s Sending ... \n %s" % (orange, normal))
        if send_mail(usern, pasw, dest, subject, msg):
            print(" %s Email Sent Successfully ! %s" % (orange, normal))
            emailV = True
            get_opt()
        else:
            print(" %s Error ! Please re enter Your informations or check your gmail settings ! %s" % (red, normal))
            get_opt()
    elif optnum == 9:
        saveload = str(input(" %s1- Save current options \n 2- Load saved options \n %s-->%s " % (white, red, normal)))
        if saveload.isdigit():
            saveload = int(saveload)
            if saveload == 1:
                if os.path.isfile(config_path):
                    os.remove(config_path)
                savefile = open(config_path, "w")
                if savefile.write("directory:%s\ninternal:%s\nunsafe-func:%s\nuploadfunc:%s\nuploadform:%s\nfilemanage:%s\nextenstion:%s\nemailV:%s\nusern:%s\npasswd:%s\ndest:%s" % (directory, internal, unsafef, uploadfunc, uploadform, filemanage, extensions, emailV, usern, pasw, dest)):
                    print("%s Configuration successfully saved ! %s" % (orange, normal))
                    get_opt()
            elif saveload == 2:
                if os.path.isfile(config_path):
                    loadfile = open(config_path, "r")
                    for lines in loadfile.readlines():
                        if len(lines.split(":")) > 1:
                            arg = lines.split(":")[1]
                        else:
                            arg = ""
                        if "directory:" in lines:
                            directory = arg.replace("\n", "")
                        elif "internal:" in lines:
                            internal = arg.replace("\n", "")
                        elif "unsafe-func:" in lines:
                            unsafef = arg.replace("\n", "")
                        elif "uploadfunc" in lines:
                            uploadfunc = arg.replace("\n", "")
                        elif "uploadform:" in lines:
                            uploadform = arg.replace("\n", "")
                        elif "filemanage:" in lines:
                            filemanage = arg.replace("\n", "")
                        elif "extenstion:" in lines:
                            extensions = arg.replace("\n", "")
                        elif "emailV:" in lines:
                            if "False" in arg.replace("\n", ""):
                                arg = False
                            else:
                                arg = True
                            emailV = arg
                            print(emailV)
                        elif "usern:" in lines:
                            usern = arg.replace("\n", "")
                        elif "passwd:" in lines:
                            pasw = arg.replace("\n", "")
                        elif "dest:" in lines:
                            dest = arg.replace("\n", "")
                    print("%s Script configuration loaded successfully ! %s" % (orange, normal))
                    get_opt()
                else:
                    print("%s No configuration file found ! please save configs first ! %s" % (red, normal))
                    get_opt()
            else:
                print("%s No option found ! please enter again ! %s" % (red, normal))
                get_opt()
        else:
            print(" %s No Option found ! Please Enter an number \n %s" % (red, normal))
            get_opt()

    elif optnum == 10:
        if directory == "":
            print(" %s Please Define an directory for scan ! %s " % (red, normal))
            get_opt()
        if "y" in internal:
            internal = "-i"
        if unsafef != "":
            unsafef = "-f %s" % unsafef
        if uploadfunc != "":
            uploadfunc = "-u %s" % uploadfunc
        if uploadform != "":
            uploadform = "-U %s" % uploadform
        if filemanage != "":
            filemanage = "-F %s" % filemanage
        if extensions != "":
            extensions = "-e %s" % extensions
        if emailV:
            email = "-E true -g %s -p %s -r %s" % (usern, pasw, dest)
        else:
            email = ""
        if startapp(directory, internal, unsafef, uploadfunc, uploadform, filemanage, extensions, email):
            print(" %s Malware scanning started successfully ! \n Press Enter to continue %s" % (orange, normal))
            get_opt()
        else:
            print("Error While starting scan :(")
    elif optnum == 11:
        if stopapp():
            while stopapp():
                pass
            print(" %s Script Stopped successfully !%s" % (orange, normal))
            get_opt()
        else:
            print(" %sError While stopping scan :(%s" % (red, normal))
            get_opt()
    elif optnum == 12:
        sys.exit()
    elif optnum == 85:
        get_opt()
    else:
        print("No options found")
        get_opt()
get_opt()
